#!/usr/bin/env bash

# Exit on any error
set -e

# Colors for better output readability
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[0;33m'
NC='\033[0m' # No color

# Project-specific configurations
PROJECT_DIR="$(dirname "$0")/.." # Adjusted to account for the "script" folder
LOG_DIR="$PROJECT_DIR/logs"
JAR_FILE="$PROJECT_DIR/target/OrionAlpha.jar"

# Java-specific configurations
JAVA_COMMON_OPTS="-Dwzpath=data/ -Dio.netty.leakDetection.level=advanced -XX:NewRatio=50 -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+HeapDumpOnOutOfMemoryError -XX:-DisableExplicitGC -Xnoclassgc -XX:+UseNUMA -XX:ReservedCodeCacheSize=48m -XX:MaxGCPauseMillis=300 -XX:GCPauseIntervalMillis=400 -XX:+UseTLAB -XX:+AlwaysPreTouch"

# Ensure log directory exists
if [ ! -d "$LOG_DIR" ]; then
    mkdir -p "$LOG_DIR"
fi

# Ensure Java is available
if ! command -v java &> /dev/null; then
    echo -e "${RED}[ERROR] Java is not installed or not in your PATH.${NC}"
    exit 1
fi

# Stop any running processes
for pid_file in "$LOG_DIR"/*.pid; do
    if [ -f "$pid_file" ]; then
        pid=$(cat "$pid_file")
        echo -e "${YELLOW}[INFO] Stopping process with PID $pid...${NC}"
        kill $pid || echo -e "${RED}[WARNING] Could not kill process $pid. It may not exist.${NC}"
        rm -f "$pid_file"
    fi
done

# Compile the project
echo -e "${GREEN}[INFO] Compiling the project...${NC}"
cd "$PROJECT_DIR"
if ! mvn clean install; then
    echo -e "${RED}[ERROR] Maven build failed. Ensure Maven is installed and the project builds successfully.${NC}"
    exit 1
fi

echo -e "${GREEN}[INFO] Project compiled successfully.${NC}"

# Function to run a specific application
run_app() {
    local app_name=$1
    local xmx_value=$2
    local extra_opts=$3

    echo -e "${GREEN}[INFO] Starting $app_name...${NC}"
    java -Xmx${xmx_value} ${JAVA_COMMON_OPTS} ${extra_opts} -cp "$JAR_FILE" $app_name
}

# Run the applications
#run_app "login.LoginApp" "200m" ""
run_app "game.GameApp" "400m" "-DgameID=0"
#run_app "shop.ShopApp" "200m" ""
